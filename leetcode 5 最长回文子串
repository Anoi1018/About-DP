给你一个字符串 s，找到 s 中最长的回文子串。

示例 1：
输入：s = "babad"
输出："bab"
解释："aba" 同样是符合题意的答案。

示例 2：
输入：s = "cbbd"
输出："bb"

示例 3：
输入：s = "a"
输出："a"

提示：
1 <= s.length <= 1000
s 仅由数字和英文字母（大写和/或小写）组成

代码示意： 时间复杂度O（n^2） 空间复杂度O（n）
在回文子串数目的题目上 增加一个对于当前回文子串长度的判断
var longestPalindrome = function(s) {
    if(!s || s.length<=1) return s;
    let len = s.length;
    let maxSubstring = s[0];
    let dp = [];
    for(let j=0;j<len;j++){
        for(let i=0;i<=j;i++){
            if(s[i] === s[j] &&( (j-i<=1) || dp[i+1])){
                dp[i] = 1; //当前子串[i,j]是回文子串
                if(maxSubstring.length<j-i+1)
                  maxSubstring = s.substring(i,j+1);  //如果当前回文子串长度更长 更新最长回文子串
            }else{
                dp[i] = 0;
            }
        }
    }
    return maxSubstring;
};
